openapi: 3.0.3
info:
  title: Project API
  version: 1.0.0
  description: Project API
tags:
  - name: project
    description: Project operations
  - name: projectType
    description: Project type operations
paths:
  /api/projects:
    get:
      tags:
        - project
      summary: Get all projects
      operationId: getProjects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
              example:
                - _id: "65f60f8a89f811c81cef5238"
                  name: "Project 1"
                  type_id: "65f3acb946a8a82e961b3fb9"
                  description: "Description 1"
                - _id: "65f60f8a89f811c81cef5238"
                  name: "Project 2"
                  type_id: "65f3acb946a8a82e961b3fb9"
                  description: "Description 2"
  /api/project/{projectId}:
    get:
      tags:
        - project
      summary: Get a project by id
      operationId: getProjectById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              example:
                _id: "65f60f8a89f811c81cef5238"
                name: "Project 1"
                type_id: "65f3acb946a8a82e961b3fb9"
                description: "Description 1"
    delete:
      tags:
        - project
      summary: Delete a project by id
      operationId: deleteProjectById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
      responses:
        '200':
          description: Project deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Project deleted"
  /api/project/{projectId}/tasks:
    get:
      tags:
        - project
        - task
      summary: Get all tasks of a project
      operationId: getTasksOfProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                $ref: './task.yaml#/components/schemas/Tasks'
              example:
                - _id: "65f3acb946a8a82e961b3fb9"
                  name: "Task 1"
                  description: "Description 1"
                  project_id: "65f60f8a89f811c81cef5238"
                  user_id: "65f3acb946a8a82e961b3fb9"
                  deadline: "2021-12-31T23:59:59.999Z"
                - _id: "65f3acb946a8a82e961b3fb9"
                  name: "Task 2"
                  description: "Description 2"
                  project_id: "65f60f8a89f811c81cef5238"
                  user_id: "65f3acb946a8a82e961b3fb9"
                  deadline: "2021-12-31T23:59:59.999Z"
  /api/project/{projectId}/task/{taskId}:
    delete:
      tags:
        - project
        - task
      summary: Remove a task from a project
      operationId: removeTaskFromProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          example: "65f3acb946a8a82e961b3fb9"
      responses:
        '200':
          description: Task removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Task removed"
  /api/project/{projectId}/developers:
    get:
      tags:
        - project
        - developer
      summary: Get all developers of a project
      operationId: getDevelopersOfProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
      responses:
        '200':
          description: A list of developers
          content:
            application/json:
              schema:
                $ref: './developer.yaml#/components/schemas/Developers'
              example:
                - _id: "65f3acb946a8a82e961b3fb9"
                  name: "Developer 1"
                  email: "dev1@gmail.com"
  /api/project/{ProjectId}/developer/{developerId}:
    delete:
      tags:
        - project
        - developer
      summary: Remove a developer from a project
      operationId: removeDeveloperFromProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f60f8a89f811c81cef5238"
        - in: path
          name: developerId
          required: true
          schema:
            type: string
          example: "65f3acb946a8a82e961b3fb9"
      responses:
        '200':
          description: Developer removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  example: "Developer removed"

  /api/projecttypes:
    get:
      tags:
        - projectType
      summary: Get all project types
      operationId: getProjectTypes
      responses:
        '200':
          description: A list of project types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypes'
              example:
                - _id: "65f3acb946a8a82e961b3fb9"
                  name: "Type 1"
                - _id: "65f3acb946a8a82e961b3fb9"
                  name: "Type 2"
  /api/projects/{projectTypeId}:
    get:
      tags:
        - project
        - projectType
      summary: Get all projects of a project type
      operationId: getProjectsOfProjectType
      parameters:
        - in: path
          name: projectTypeId
          required: true
          schema:
            type: string
          example: "65f3acb946a8a82e961b3fb9"
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
              example:
                - _id: "65f60f8a89f811c81cef5238"
                  name: "Project 1"
                  type_id: "65f3acb946a8a82e961b3fb9"
                  description: "Description 1"
                - _id: "65f60f8a89f811c81cef5238"
                  name: "Project 2"
                  type_id: "65f3acb946a8a82e961b3fb9"
                  description: "Description 2"


components:
  schemas:
    Project:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: "65f60f8a89f811c81cef5238"
          name:
            type: string
            example: "Project 1"
          type_id:
            type: string
            example: "65f3acb946a8a82e961b3fb9"
          description:
            type: string
            example: "Description 1"
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    ProjectType:
      type: object
      properties:
        _id:
          type: string
          example: "65f3acb946a8a82e961b3fb9"
        name:
          type: string
          example: "Type 1"
    ProjectTypes:
      type: array
      items:
        $ref: '#/components/schemas/ProjectType'